name: CI - Pipeline Orchestration Tests

on: [push, pull_request]

jobs:
  test-orchestration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-mock

    - name: Create necessary directories
      run: |
        mkdir -p data/schemas data/reference logs data/outputs

    - name: Create sample schema file for testing
      run: |
        echo '{"type": "object", "properties": {"id": {"type": "number"}}}' > data/schemas/sales_schema_v1.json

    - name: Create sample data files
      run: |
        mkdir -p data/raw data/reference
        echo 'id,producto,venta,region,fecha' > data/raw/sales_data.csv
        echo '1,Laptop,1500,Norte,2025-01-30' >> data/raw/sales_data.csv
        echo '2,Mouse,50,Sur,2025-01-30' >> data/raw/sales_data.csv
        echo 'producto,categoria,precio_base' > data/reference/product_catalog.csv
        echo 'Laptop,TecnologÃ­a,1200' >> data/reference/product_catalog.csv

    - name: Test orchestration components
      run: |
        python -m pytest tests/ -v

    - name: Validate pipeline configuration
      run: |
        python scripts/validate_config.py

    - name: Dry-run pipeline initialization
      run: |
        python -c "from src.orchestrator import PipelineOrchestrator; print('Orchestrator initialized correctly')"

  integration-test:
    runs-on: ubuntu-latest
    needs: test-orchestration
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run integration test
      run: |
        python tests/integration_test.py

    - name: Verify directory structure
      run: |
        echo "Directory structure check passed"